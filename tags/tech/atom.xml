<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: tech | Biaobiaoqi的博客]]></title>
  <link href="http://biaobiaoqi.me/tags/tech/atom.xml" rel="self"/>
  <link href="http://biaobiaoqi.me/"/>
  <updated>2013-10-21T21:42:26+08:00</updated>
  <id>http://biaobiaoqi.me/</id>
  <author>
    <name><![CDATA[Biaobiaoqi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[数据集成工具：Teiid实践]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/10/19/data-integration-tool-teiid/"/>
    <updated>2013-10-19T23:58:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/10/19/data-integration-tool-teiid</id>
    <content type="html"><![CDATA[<p>数据集成是把不同来源、格式、特点性质的数据在逻辑上或物理上有机地集中，从而为企业提供全面的数据共享。数据集成的方式多种多样，这里介绍的<a href="http://www.jboss.org/teiid/">Teiid</a>是其中的一种：通过抽象和联邦技术，实现分布式数据源的实时数据访问和集成，无需从记录系统中复制或移动数据。</p>

<p><a href="http://blogs.ejb.cc/archives/3552/teiid-scalable-information-integration-program">链接</a>是一篇关于Teiid的中文介绍，比较详细。</p>

<p>由于适配不同数据源和生成虚拟数据库（VDB）需要维护好几个配置文件，直接手动部署Teiid比较难受。好在Teiid提供了辅助工具<a href="http://www.jboss.org/teiiddesigner">Teiid Designer</a>，这是一个Eclipse插件，能帮助用户可视化的管理数据的集成过程。</p>

<ul>
<li><p>安装配置</p>

<p>  参见官网的Downloads界面的详细介绍（注意：环境配置中，各组件需严格遵循官网指定版本，实践经验表明，Teiid本身并不够鲁棒，容不得小差错）。</p></li>
</ul>


<p>接下来，我们用一个简单的应用场景实践Teiid的数据集成功能。</p>

<!--more-->


<h2>应用场景</h2>

<p>书店主营图书销售，并维护者一个用户对图书评价的数据库。技术上说，书店拥有三个数据模块：</p>

<ul>
<li><p>MySQL数据库，存储用户信息和用户对某书的评价</p>

<p>  表结构如下：</p></li>
</ul>


<p>```
create database library;
use library;
create table users (</p>

<pre><code> id int primary key,
 name char(20) not null,
 passwd char(20)) not null,
</code></pre>

<p>);
create table comments(</p>

<pre><code> cid int primary key,
 uid int ,
 bookid int not null,
 content char(255),
 foreign key (uid) references users(id)
</code></pre>

<p>);
```
* EXCEL表格，店主用于记录销售量、记录销售单价</p>

<p><code>
book_id,price,sales
1,89.00,1000
2,52.00,9999
3,30.00,10000
4,9800,5555
5,69.00,1234
</code></p>

<ul>
<li>XML文件记录书籍信息，包括</li>
</ul>


<p>``` xml
&lt;?xml version= "1.0" encoding ="UTF-8"?>
<BooksInfo></p>

<pre><code>    &lt;Book id = "1" &gt;
           &lt;Title&gt; Hadoop: The Definitive Guide &lt;/Title&gt;
           &lt;Author&gt; Tom White&lt;/Author &gt;
           &lt;publisher&gt; O'Reilly&lt;/ publisher&gt;
    &lt;/Book&gt;
    &lt;Book id = "2" &gt;
           &lt;Title&gt; Effective Java&lt;/Title &gt;
           &lt;Autorh&gt; Joshua Bloch&lt;/Autorh&gt;
           &lt;publisher&gt; HZ Books&lt;/ publisher&gt;
    &lt;/Book&gt;
    &lt;Book id = "3" &gt;
           &lt;Title&gt; C Programming Language&lt;/Title &gt;
           &lt;Autorh&gt; Kernighan, Ritchie &lt;/Autorh&gt;
           &lt;publisher&gt; HZ Books&lt;/ publisher&gt;
    &lt;/Book&gt;
    &lt;Book id = "4" &gt;
           &lt;Title&gt; Head First: Design Pattern&lt;/Title &gt;
           &lt;Autorh&gt; Freeman&lt;/ Autorh&gt;
           &lt;publisher&gt; Turning Education&lt;/publisher &gt;
    &lt;/Book&gt;
    &lt;Book id = "5" &gt;
           &lt;Title&gt; Refactoring: Improving the Design of Existing Code &lt;/Title&gt;
           &lt;Autorh&gt; Martin Fowler &lt;/Autorh&gt;
           &lt;publisher&gt; O'Reilly&lt;/ publisher&gt;
    &lt;/Book&gt;
</code></pre>

<p></BooksInfo>
```</p>

<h2>实践</h2>

<h3>1.创建工程</h3>

<p>打开配置好Teiid Designer插件的Eclipse，在Teiid Designer视图的Guides中，找到Define Teiid Model Project选项，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid1.png" alt="img" /></p>

<p>一路点击next，在如下界面勾选sources和views即可，designer guid会帮助生成这两个目录，其他目录在此项目中不需要。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid2.png" alt="img" /></p>

<h3>2.导入MyQL数据源</h3>

<p>在Guides界面，选择JDBC数据源</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid3.png" alt="img" /></p>

<p>第一个步骤Define Teiid Model Project在上一步中已经完成了，现在需要创建一个JDBC链接，选择Create JDBC connection，在弹出的窗口中，选择Mysql数据库，然后点下一步</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid4.png" alt="img" /></p>

<p>选择mysql驱动，配置好Mysql数据源的的url、用户名、密码，点下一步。（在这里，mysql的端口为默认的3306，library为之前配置好的mysql数据库）。点击test connection测试与mysql的链接能否建立。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid5.png" alt="img" /></p>

<p>接下来需要给数据源创建源模型（source model）了。同样在Guides试图上双击Create source model for JDBC data source，一路下一步，直到选择数据库和表，选择library数据库中的所有表，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid6.png" alt="img" /></p>

<p>创建源模型的最后一步如下图，可以自定义Model Name，为了让之后的sql查询过程更可读，我将以数据源类型命名它（mysql.xmi）。其他无关配置暂时不用理会。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid7.png" alt="img" /></p>

<p>finish后，就生成了一个元模型，如下图。图中可视化的显示了数据库所建的两张表</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid8.png" alt="img" /></p>

<p>接下来可以测试数据是否可读，双击Guides中的Preview Data，在弹框中选择需要preview的表或者precedure（procedure在本工程里这里不会被用到）查询结果显示在了eclipse下方的SQL Result框中，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid9.png" alt="img" /></p>

<p>接下先来不用着急Define VDB，我们先把所有数据源配置完成后再一起来定义虚拟数据库。</p>

<h3>3.导入FlatFile数据源（CSV）</h3>

<p>跟之前一个步骤一样，只需要沿着Guides里的路线一步一步操作。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid10.png" alt="img" /></p>

<p>首先创建连接，配置好后test connection确保链接无误</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid12.png" alt="img" /></p>

<p>链接建立后，需要创建元模型。如下图，提示有错，只需要选定Source Model Definition的文件的存储位置即可。存放在项目的sources目录中</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid13.png" alt="img" /></p>

<p>按照默认配置，不断下一步，在 Flat File Demilited Columns Parser Settings 这一步，可以注意到下方有生成一串SQL语句。这些语句告诉Teiid需要如何将csv文件中的数据映射为关系型数据。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid14.png" alt="img" /></p>

<p>继续下一步，view model definition界面，提示创建的tableview名字包含不合法字符。原来由于将flat file命名为sales.csv,它自动生成了price.csvView作为table name，但名字中是不能出现<code>.</code>的，于是修改为salesview，finish。</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid15.png" alt="img" /></p>

<p>之后测试数据能否读取。在选择所要preview的数据时，需要选择相应的table，而不是模型（这里需要选择salesView，而不是上层的price_view.xmi）。如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid16.png" alt="img" /></p>

<h3>4.导入xml数据</h3>

<p>大部分步骤跟之前的步骤类似，在设定源模型时，需要注意配置好xml数据到关系型数据的映射关系，如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid17.png" alt="img" /></p>

<p>XML File Contents中会根据xml文件中的数据解析出整体的层次结构。我们需要将其中的Book里的信息，添加到右边的Column Info中。虽然有很多Book数据列表显示在左边一栏里，但实际上只需要添加一次相关信息到右边的列信息中。值得注意的是，这里自动生成的Root Path是错误的，需要修改为BooksInfo/Book。其他没有什么特别的，一路下一步。</p>

<p>现在整个项目如下图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid18.png" alt="img" /></p>

<h3>5.生成虚拟数据库</h3>

<p>点击Guides中的Define VDB，将三个数据源的模型加入到VDB中:MySQL的源模型，XML和CSV的视图模型（注意：不可以加入另外两个源模型的xmi文件，博主如此操作后遇到了一些莫名其妙的问题）。</p>

<p>如此就完成了在Teiid Designer中的多数据源集成的配置了。</p>

<h3>6.部署和使用</h3>

<p>通过Teiid Designer，我们能方便的部署VDB到Jboss服务器。</p>

<p>在Guides界面下，有execute vdb选项，双击即可。正式运行之前，需要运行Jboss server，如果没有启动服务器，Teiid Designer会弹框提醒的。</p>

<p>最后，尝试一下通过Teiid集成查询多个数据源。将sql语句输入到执行框中，刷蓝->右键->执行选中的语句。</p>

<p>```</p>

<blockquote><p>select * from "csv"."sales" as A join "xml"."booksinfo" as B on A.book_id = B.id</p></blockquote>

<p>```</p>

<p>结果如图：</p>

<p><img src="http://biaobiaoqi.u.qiniudn.com/teiid19.png" alt="img" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《改变未来的九大算法》]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/10/03/nine-algorithms-that-changed-the-future/"/>
    <updated>2013-10-03T13:19:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/10/03/nine-algorithms-that-changed-the-future</id>
    <content type="html"><![CDATA[<h2>不要在意那些细节</h2>

<p>这是一本关于计算机世界的科普读物。豆瓣链接：<a href="http://book.douban.com/subject/24529132/">请戳</a>。</p>

<p>非常推荐刚接触计算机的朋友花上三五小时将全书通读一遍，没有技术细节，没有公式证明，它会告诉作者挑选出的九大算法出现的缘由和发展的过程。这些不关乎实现细节的思想概括，更能体现算法在整个领域中的存在的原因。它们不再是冷冰冰的算法过程，这是阅读大多数的书籍、教材所难以获得的。</p>

<p>至于我的推荐原因，如下全文。</p>

<!--more-->


<h3>课程学习之弊</h3>

<p>大二大三的那两年，在学校上过了网络、操作系统、数据库、算法设计等诸多计算机领域的基础必修课程。由于生性愚钝加之令人头大的砖头书的体系化、理论化，对于知识的掌握顶多处于知其然却不知其所以然的程度。在这种情况下，学习就退化为了填鸭式的记忆。比如我记得RSA的公钥加密流程，却无法理解为何要套用这么一大堆的数学方法来得到如此神奇的效果，比如，我知道数据库有一套日志机制，却不知道它是如何与其他的组件共同构建起一个系统的……没有来龙去脉，就没有对技术发展的感知，没有对技术本质的理解和认识。</p>

<p>经过了四年多的摸爬滚打，到现在对这些基础知识的认识自然远好于当年上课的理解水平，不是因为我在反复的学习课程内容，而是从实践中获得了新的认识。</p>

<h3>从生活出发</h3>

<p>大多数人的思维习惯，倾向于从已知的事物中衍生对新事物的认识，这是一种类推。而高校的大多数教材和教授方式较少考虑到这一点，一种简单粗暴的直入主题的方式被大量的使用，排斥了知识的前因后果，技术的来龙去脉，剩下的只是新体系本身。这增加了学习曲线的入门坡度。</p>

<blockquote><p>理论是灰色的，生活之树常青</p></blockquote>

<p>《改变未来的九大算法》是对歌德这句话的良好实践。</p>

<!--more-->


<p>比如在阐述公钥加密机制时，作者从生活中的寄信讲起，一步步类比到计算机的通信上，并用染料配色的方式举例了迪菲赫尔曼机制。生动形象的描述了算法的原理和来由。</p>

<h3>抛开细节实现</h3>

<p>过往的教材一旦陷入对某些实现细节的阐释，就失去了对全局上下文的把握。就像镜头对焦到了一个点上，造成了周边景物的模糊化效果。</p>

<p>《改变未来的九大算法》全书很少涉及到技术的实现细节，这正是它的优势所在。比如数据库的一致性章节，从一个银行转账的实例讲起，通过所面临的一系列问题的解决方案的描述，让人对数据库的整体实现有了全局的把握。在理解的前提下，更深入的学习也变得更有动力和方向。</p>

<p>奈何自己已经过了朦朦胧胧的那几年，在此将本书强烈推荐给初涉计算机领域的朋友们。当然，其他人粗读一遍，也是对自己知识体系的一次小梳理啦;)。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给博客签上CC协议]]></title>
    <link href="http://biaobiaoqi.me/blog/2013/07/10/cc-license/"/>
    <updated>2013-07-10T22:37:00+08:00</updated>
    <id>http://biaobiaoqi.me/blog/2013/07/10/cc-license</id>
    <content type="html"><![CDATA[<p>大家都知道开源软件。通过开放源代码的方式，允许用户学习、修改、增进提高这些软件质量。软件界的开源协议很多，比如常见的Apache，BSD，GPL等等。这是一种充分利用网络的便利性，鼓励分享和创新的协议潮流。从这个层面上来说，Creative Commons也是如此。</p>

<p>这是一个非营利性组织，也是一种创作的授权方式。简称CC协议，中国大陆正式名称为知识共享。次组织的主要宗旨是增加创意作品的流通可及性，作为其他人据以创作及共享的基础，并寻找适当的法律以确保上述理念。</p>

<h2>CC协议的起源</h2>

<p>Creative Commons最先是2002年的12月16号在美国首次发布的。这个协议最初是根据美国版权法设计出来的。技术的发展，网络的发展，出现了开放共享的需求，而传统的作品保护的模式，对作品的使用和内容的开放带来一些限制。怎么样满足这种需求，同时又尊重权利人的著作权？传统的保护模式不能实现这样的作用，它可能关注于保护的时候可能忽略了对公众的，尤其网络环境下对知识文化这样分享的需求。CC协议的设计实际上是基于这样一种大的背景，在这样一个大的网络环境下应运而生，它是来倡导一种合法的分享。</p>

<h2>CC协议内容</h2>

<p>CC协议可以分为四个部分。每个部分对使用者有不同程度的限定。</p>

<ul>
<li><p>1.署名（BY）：作品上必须附有作品的归属。如此之后，作品可以被修改，分发，复制和其它用途。</p></li>
<li><p>2.非商业性使用（NC）：作品可以被修改、分发等等，但不能用于商业目的。</p></li>
<li><p>3.禁止演绎（ND）：这意味着你可以复制和分发它们，但你不能以任何方式修改它们，或基于它们进行二次创作。</p></li>
<li><p>4.相同方式共享（SA）：作品可以被修改、分发或其它操作，但所有的衍生品都要置于CC许可协议下。</p></li>
</ul>


<p>实际使用时，需要对这四种条件分别作出约束。不同的条件共有16种组合方式，其中有的组合方式互斥，简化后剩下了6种常用协议：</p>

<h5>署名（BY）</h5>

<p>此协议最为宽松，只需署名，其他无约束。</p>

<h5>署名（BY）-禁止演绎（ND）</h5>

<p>署名的同时，不得对作品进行改动。但可以用于商业或非商业用途。</p>

<h5>署名（BY）-非商业性使用（NC）</h5>

<p>署名的同时，可以修改作品，但不能用于商业用途。</p>

<h5>署名（BY）-非商业性使用（NC）-禁止演绎（ND）</h5>

<p>署名，且不得用于商业用途和修改。</p>

<h5>署名（BY）-非商业性使用（NC）-相同方式共享（SA）</h5>

<p>署名，不能商用，但可以演绎，且演绎后的内容必须是同样的共享方式。</p>

<h5>署名（BY）-相同方式共享（SA）</h5>

<p>署名，可以商用，可以演绎，但演绎后的作品必须是同样的共享方式。</p>

<!--more-->


<h2>国内的现状</h2>

<p>昨天，为了防止其他网站的不经允许无署名的转载行为，我刚给所有的文章末尾添加了原文链接信息。</p>

<p>实际上，在中国，这种侵犯著作权的行为非常泛滥。有的网站，甚至就致力于爬其他社区产生的优质数据，并直接复制到自己的网页上，以图在网络世界中获得更高的收益。在大数据的时代，越来越多的数据会在网络上产生，会很容易的在网络间流动。这种侵犯著作权的行为将破坏整个互联网信息流动的环境，阻碍社会进步。原有的著作权管理法定条纹相对守旧，面对互联网环境，本身也是水土不服的。CC协议的重要性不言而喻。</p>

<h2>博客的实践</h2>

<p>我想在我的博客中采纳BY-NC-ND协议。其对应的许可协议网络版链接如下：<a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh</a></p>

<p>只需要在在<a href="/blog/2013/07/10/decorate-octopress/">昨天的修改</a>基础上，替换html内容，即可得到一个签署了BY-NC-ND协议的展示结果。具体需修改<code>octopress/plugins/post_footer_filter.rb</code>文件：</p>

<p>1.在文件头加上utf-8编码标记，以支持中文。</p>

<p>2.搜索定位到<code>post.content + %Q</code>一行，将内容修改为：
```ruby
post.content + %Q[<p class='post-footer'>&nbsp;#{pre or "原文地址："}<a href='#{post.full_url}'>#{post.full_url}</a><br/>&nbsp;版权声明：自由转载-非商用-非衍生-保持署名| <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>]</p>

<p>```</p>

<h3>参考</h3>

<ul>
<li><a href="http://zh.wikipedia.org/zh-cn/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6">开源软件wiki</a></li>
<li><a href="http://www.awflasher.com/blog/archives/939">五种开源协议的比较(BSD,Apache,GPL,LGPL,MIT) – 整理</a></li>
<li><a href="http://www.baike.com/wiki/CC%E5%8D%8F%E8%AE%AE">CC协议互动百科</a></li>
<li><a href="http://creativecommons.net.cn/2009/11/30/prof-wang-interview-at-hudong/">王春燕教授做客互动百科谈CC</a></li>
<li><a href="http://www.aqee.net/a-short-guide-to-open-source-and-similar-licenses/">开源软件许可协议简介</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
