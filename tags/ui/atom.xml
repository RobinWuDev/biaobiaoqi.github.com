<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ui | Biaobiaoqi的博客]]></title>
  <link href="http://biaobiaoqi.github.com/tags/ui/atom.xml" rel="self"/>
  <link href="http://biaobiaoqi.github.com/"/>
  <updated>2013-09-08T04:19:37+08:00</updated>
  <id>http://biaobiaoqi.github.com/</id>
  <author>
    <name><![CDATA[Biaobiaoqi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[定制Octopress]]></title>
    <link href="http://biaobiaoqi.github.com/blog/2013/07/10/decorate-octopress/"/>
    <updated>2013-07-10T01:53:00+08:00</updated>
    <id>http://biaobiaoqi.github.com/blog/2013/07/10/decorate-octopress</id>
    <content type="html"><![CDATA[<p>在github pages上搭建好octopress博客之后，博客的基本功能就能使用了。如果想自己定制也是没问题的，octopress有较详尽的官方文档，原则上有问题求助官方即可：<a href="http://octopress.org/help/">octopress-help</a>。官方没有包纳的也可以去询问<a href="http://stackoverflow.com/questions/tagged/octopress">stackoverflow</a>。 当然，中文的看起来总会省事儿点。我做了如下一些总结;)</p>

<p>不会ruby的童鞋特别注意：配置_config.yml的过程中特别注意，配置项『:』后要留空格，否则会报错。</p>

<p>另外，一些『土方法』可能并不利于程序的维护可扩展，有空再仔细研究，大家将就着用吧;).</p>

<h2>0.安装第三方主题</h2>

<p>之所以把这一点标记为0，是因为在博主刚刚经历了博客主题的更新后，惨烈的发现需要重新配置包括评论、百度统计在内的不少东西。</p>

<p>应该是自己在做定制化的过程中乱修改源码（这是一种很不可取维护方式，使软件难以持续扩展）造成的，又或者octopress框架本身对定制化扩展的支持比较弱（对ruby不熟，对octopress也一知半解，我不确定是不是这个原因）。</p>

<p>简而言之，初接触octopress的朋友们，建议先安装第三方主题，再参考以下定制方法。</p>

<p>我使用的第三方主题是<a href="https://github.com/gehaxelt/CSS-WhiteLake">『whitelake』</a>。</p>

<p>安装过程很简单:</p>

<p><code>
$ cd octopress
$ git clone https://github.com/gehaxelt/CSS-WhiteLake.git .themes/whitelake
$ rake install['whitelake']
$ rake generate
</code>
注意，执行<code>rake install['whitelake']</code>之后，直接使用<code>rake preview</code>浏览网页会遇到很多瑕疵，<code>rake generate</code>之后再<code>rake preview</code>就没问题了。</p>

<p>更多第三方插件和主题资源，参见<a href="https://github.com/imathis/octopress/wiki">官方repo的wiki</a>.</p>

<h2>1.装饰边栏</h2>

<p>以增加豆瓣展示框为例。参加正反反长大哥的博客<a href="http://icodeit.org/2012/10/how-to-embed-douban-show-in-your-octopress-site/">How to Embed Douban-Show in Your Octopress Site</a></p>

<h2>2.增加评论和分享功能</h2>

<p>虽然octopress内置的disqus评论系统很不错，但在国内的使用并不普及。相比之下，友言、多说等第三方评论则更接地气，可以利用到微博、人人等SNS账号。</p>

<h3>2.1友言</h3>

<p>本博客采用了友言。首先注册<a href="http://www.uyan.cc/">友言</a>的账号，如果不注册，虽然也能实现评论功能，但没有后台管理整个站点的评论会十分纠结。注册完成之后，选择获取代码，将这串代码贴入相应的位置，即可实现第三方评论。</p>

<p>在路径<code>$OCTOPRESS/source/_includes/post/</code>上创建文件<code>youyanandjiathis.html</code>，功能代码放入其中。</p>

<h3>2.2加网</h3>

<p>分享方面，本博客使用了<a href="http://www.jiathis.com/getcode/icon">加网</a>。注册后，在更多高级自定义功能中，可能自定义不同的分享按钮，生成代码后，也将生成的代码贴入<code>$OCTOPRESS/source/_includes/post/youyanandjiathis.html</code>中。</p>

<p>现在，youyanandjiathis.html的样子如下(需要注意，自己使用时，uid显然是不一样的啦)</p>

<p>``` html</p>

<!-- JiaThis Button BEGIN -->


<div class="jiathis_style_32x32">
    <a class="jiathis_button_qzone"></a>
    <a class="jiathis_button_tsina"></a>
    <a class="jiathis_button_tqq"></a>
    <a class="jiathis_button_weixin"></a>
    <a class="jiathis_button_renren"></a>
    <a href="http://www.jiathis.com/share?uid=1814751" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
    <a class="jiathis_counter_style"></a>
</div>


<script type="text/javascript">
var jiathis_config = {data_track_clickback:'true'};
</script>


<script type="text/javascript" src="http://v3.jiathis.com/code/jia.js?uid=xxxxxx" charset="utf-8"></script>


<!-- JiaThis Button END -->




<!-- UY BEGIN -->


<div id="uyan_frame"></div>


<script type="text/javascript" src="http://v2.uyan.cc/code/uyan.js?uid=xxxxxxxx"></script>


<!-- UY END -->


<p>```</p>

<h3>2.3将功能增加到博客中</h3>

<p>功能代码已经都在youyanandjiathis.html中了，接下来是让blog使用到这些功能代码。</p>

<p>首先在_config.yml中增加开关：
``` ruby</p>

<h1>comment and share</h1>

<p>comment_and_share: true
```</p>

<p>然后在<code>$OCTOPRESS/source/_includes/post/sharing.html</code>中的，根据开关<code>comment_and_share</code> 引入对应的功能代码<code>post/youyanandjiathis.html</code>，类比于默认实现中的<code>&lt;facebook_like&gt;</code>部分。代码如下（使用时，先去掉反斜杠）：</p>

<p>``` html</p>

<p>  {\% if site.comment_and_share \%}</p>

<pre><code>  \{\% include post/]youyanandjiathis.html \%\}
</code></pre>

<p>  {\% endif \%}</p>

<p>```</p>

<h3>2.4友言验证</h3>

<p>另外，需要在友言的后台处理评论，甚至做一些定制化处理，需要通过友言的验证。详情在友言的管理员后台可见。</p>

<h2>3.定制域名</h2>

<p>如果你拥有自己的域名，可以CNAME到github pages上。以我的配置为例（我的域名为<code>biaobiaoqi.me</code>）。</p>

<p>1.在octopress的source目录下创建CNAME文件，并输入新域名：biaobiaoqi.com</p>

<p>2.在域名管理中，创建或修改A记录，指向207.97.227.245这个地址。</p>

<p>3.创建CNAME记录，www.biaobiaoqi.com -> biaobiaoqi.github.com</p>

<p>这一过程可能需要好几天才能生效，请耐心等待:)</p>

<h2>4.让博客中连接在新窗口打开</h2>

<p>由于markdown不支持这一语法，如果要自己用html标签实现，又有些违背了markdown以内容为重的立意。</p>

<p>参考博文<a href="http://www.blogjava.net/lishunli/archive/2013/01/20/394478.html">《在Octopress中为markdown的超链接加上target="_blank"》</a>，可以通过将如下代码添加到 {OCTOPRESS_HOME}/source/_includes/custom/head.html文件末尾来实现：</p>

<p>``` javascript</p>

<script type="text/javascript">

function addBlankTargetForLinks () {

  $('a[href^="http"]').each(function(){

      $(this).attr('target', '_blank');

  });

}

$(document).bind('DOMNodeInserted', function(event) {

  addBlankTargetForLinks();

});

</script>


<p>```</p>

<h2>5.列表的排版</h2>

<p>默认情况，所有文字的排头会对齐，但如果有列表项的情况下也如此，列表头就会冲出文章的主体区块了。</p>

<p>在octopress/sass/custom/_layout.scss文件中找到#$indented-lists: true行，去掉#注释即可。</p>

<p>```
$indented-lists: true</p>

<p>```</p>

<!--more-->


<h2>6.404ERROR页面</h2>

<p>在ocotopress/source目录下，增加404.markdown，并做出自定义的呃编辑。本博客使用了腾讯公益404，推荐大家使用，为社会贡献一分正能量。<a href="http://www.qq.com/404/">公益404</a></p>

<h2>``` </h2>

<p>layout: page</p>

<p>title: "404 Error"</p>

<p>date: 2013-4-21 02:35</p>

<p>comments: false</p>

<p>sharing: false</p>

<p>footer: false</p>

<hr />

<script type="text/javascript" src="http://www.qq.com/404/search_children.js" charset="utf-8"></script>


<p>```</p>

<h2>7.在侧边栏增加标签云(tag cloud)</h2>

<p>octopress默认只有分类，没有标签。这对于博文的组织和管理很不友好。有人开源出了自己定制的tag生成和tag cloud展现的代码，可以引入到自己的博客中来。</p>

<p>详细操作参见博文：<a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">《为octopress添加tag Cloud》</a>。不过博文中没有讲解标签云的UI配置参数的使用，为了让UI适应页面，请参考原作者的官方说明:<a href="https://github.com/robbyedwards/octopress-tag-cloud">octopress-tag-cloud</a>。我所实践出的较合理的参数值如下
``` ruby</p>

<h1>注意，下面一行的escape反斜杠在正常使用时需要去掉</h1>

<p>{\% tag_cloud font-size: 70-180%, limit: 15, order: rand, style: para  { &amp;nbsp }\%}
```</p>

<p>如果想将文章分类（category）也放在侧边栏，可以参考这篇博文：<a href="http://paz.am/blog/blog/2012/06/25/octopress-category-list-plugin/">《Octopress - Category List Plug-in》</a></p>

<h2>8.在顶栏增加标签云页面tab</h2>

<p>1.生成新网页
<code>ruby
rake new_page["tag-cloud"] #在octopress/source/中将生成tag-cloud/文件夹
</code></p>

<p>2.在顶栏增加新页面</p>

<p>修改<code>source/_includes/custom/navigation.html</code></p>

<p>```</p>

<ul class="main-navigation">
  <li><a href="/">首页</a></li>
  <li><a href="/blog/categories/tech/">技术</a></li>
  <li><a href="/blog/categories/life/">生活</a></li>
  <li><a href="/blog/categories/book/">读书</a></li>
  <li><a href="/tag-cloud/">标签云</a></li>
  <li><a href="/about">关于</a></li>
</ul>


<p><code>``
在需要的位置增加</code><li><a href="/tag-cloud/">标签云</a></li>`。如此一来，可以在网页顶栏看到『标签云』一栏了。不过此时，点击进入，页面为空。</p>

<p>3.修改标签云页面内容。</p>

<p>修改<code>octopress/source/tag-cloud/index.markdown</code>，增加标签云执行脚本。</p>

<p>```</p>

<hr />

<p>layout: page
title: "标签云"
date: 2013-07-10 02:53
comments: true
sharing: true</p>

<h2>footer: true</h2>

<h1>注意，代码中的escape反斜杠在正常使用时需要去掉</h1>

<h1>另外，这几个语句不能使用换行。在我的测试环境下，使用换行后，最终的页面上对换行进行了错误的解码，给增加了一个<code>标签，造成了错误的显示。</h1>

<ul class="tag-cloud">\{\% tag_cloud font-size: 90-210%, limit: 1000, style: para \%\}</ul>


<p>```</p>

<h2>9.博客末尾增加原文链接、版权等</h2>

<p>最近发现有其他小网站未经授权直接copy我的博客内容，在违章的末尾加上版权、原文链接变得很有必要了。</p>

<p>详情参见博客<a href="http://codemacro.com/2012/07/26/post-footer-plugin-for-octopress/">《为octopress每篇文章添加一个文章信息》</a>。</p>

<p>值得注意的是，插件代码中如下几行需要去掉缩进和换行符。原因跟第8节所讲一样，换行符引起了错误的解码，造成了错误的显示。</p>

<p>``` ruby
post.content + %Q[<p class='post-footer'></p>

<pre><code>        #{pre or "original link:"}
        &lt;a href='#{post.full_url}'&gt;#{post.full_url}&lt;/a&gt;&lt;br/&gt;
        &amp;nbsp;written by &lt;a href='#{url}'&gt;#{author}&lt;/a&gt;
        &amp;nbsp;posted at &lt;a href='#{url}'&gt;#{url}&lt;/a&gt;
        &lt;/p&gt;]
</code></pre>

<p>```
最后，kevin没有提及的是，为了做好美化，还需要增加一段针这块区域的css：</p>

<p>编辑<code>sass/custom/_style.scss</code>，在末尾增加如下内容：</p>

<p><code>css
.post-footer{margin-top:10px;padding:5px;background:none repeat scroll 0pt 0pt #eee;font-size:90%;color:gray}
</code>
这样，原文链接和版权信息就能很好的和正文内容分离开了。</p>

<h2>10.给中英文之间加空格</h2>

<p>参见博文<a href="http://xoyo.name/2012/04/auto-spacing-for-octopress/">《给中英文间加个空格》</a>。</p>

<p>特别注意ruby文件的编码：复制博文中的代码时，需要去掉前几行的描述性注释，让<code>#encoding:UTF-8</code>语句暴露在.rb文件的第一句。否则，<code>rake generate</code>时，会报错无法识别<code>\p{Han}</code>。</p>

<h2>Tips</h2>

<p>既然是个博客站点，就算是web产品啦，可以考虑下SEO。推荐博文<a href="http://codemacro.com/2012/09/06/octopress-seo/">《Octopress中的SEO》</a></p>
]]></content>
  </entry>
  
</feed>
