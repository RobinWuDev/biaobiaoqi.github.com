<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: methodology | Biaobiaoqi的博客]]></title>
  <link href="http://biaobiaoqi.github.com/tags/methodology/atom.xml" rel="self"/>
  <link href="http://biaobiaoqi.github.com/"/>
  <updated>2013-07-05T02:13:39+08:00</updated>
  <id>http://biaobiaoqi.github.com/</id>
  <author>
    <name><![CDATA[Biaobiaoqi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[《清单革命》]]></title>
    <link href="http://biaobiaoqi.github.com/blog/2013/07/05/checklist-manifesto/"/>
    <updated>2013-07-05T00:54:00+08:00</updated>
    <id>http://biaobiaoqi.github.com/blog/2013/07/05/checklist-manifesto</id>
    <content type="html"><![CDATA[<h2>应该叫『清单宣言』</h2>

<p>在Amazon上『满100送一本』的活动中随手挑到了它。鉴于其空洞的标题，被束之高阁半年多，最近关注个人管理方面的知识，才拍拍灰尘读起来。</p>

<p>书的英文原名是『The Checklist Manifesto: How to Get Things Right』，直译成『清单宣言』在我看来更贴切，而非充满噱头的『清单革命』。正如一个小功能难以做成独立的产品，一个方法改进也难以成就革命。『清单能大大的改善效率，降低失败概率』这一观点，在医生出生的作者手中翻来覆去的被各种事例证明着，案例的行业背景从医学到建筑，到航天，再到投资，实在乏味。当然，这不妨碍『清单』这一工具对生活工作的助力所带给我们的思考。</p>

<h2>三类问题</h2>

<p>清单作为处理问题的工具，需要从问题的分类谈起。问题大致可分为三类：简单问题、复杂问题和极端复杂的问题。</p>

<ul>
<li>简单问题，诸如洪培蛋糕，只需要知道流程，就可以独立完成，没有复杂的过程和细节。</li>
<li>复杂问题，比如火箭发射升空。通过耐心分解，复杂问题能划分成很多的简单问题，进而得到解决。这时候，需要借助集体的力量。</li>
<li>极端复杂的问题，比如子女的抚养。问题的领域极其宽广和复杂，充满了不确定性，理性的分析难以完全掌控。</li>
</ul>


<p>这三种类型的问题由简单到复杂的梯度递增。</p>

<h2>实践经验：清单</h2>

<p>实践领域的失败分为两种，一种是无知之错，俗话说得好，『不知者无罪』；另一种是无能之错，即按照知识储备，完全能成功解决问题，最终却因为各种原因失败了。随着社会的发展，后者的出现频率越来越高。造成这一现象的原因容易理解，社会复杂度越来越高，各种问题的实施难度加大，远超过个人能力的范围了。这个时候『清单』的重要性凸显了出来。</p>

<p>人脑有一个认知防护网，体现在如下认知缺陷上：</p>

<ul>
<li>记忆不完整</li>
<li>注意力不集中</li>
<li>惰性思维</li>
</ul>


<p>清单能帮助人处理问题：</p>

<ul>
<li>重压之下，人脑容易忽视某些细节。</li>
<li>人脑对于熟知的事实，思考时容易跳过一些事项。</li>
</ul>


<p>使用清单时，特别注意需要保证清单的简单、可测、高效。清单是给人用的，基于人脑局限性，复杂和模糊的认知难以帮助事情的发展。</p>

<blockquote><p>清单需要简单、可测、高效</p></blockquote>

<p>当然，清单也有显而易见的缺点：死板。它是一张纸条上的几行文字，不会知道水的冷暖。那么，当意外发生，需要应变的就是执行者本人。生活中，事物总是充满着变化，清单的控制也需要注意及时的应变。</p>

<blockquote><p>制定清单、执行清单的过程，也需要灵活应变。</p></blockquote>

<h2>用清单处理问题</h2>

<ul>
<li>简单问题： 简单的问题可以通过清单提高效率和成功率。</li>
<li>复杂问题： 可以拆分为许多的简单问题，分由多人管理和复杂，再辅以清单解决。另外，需要注意人与人之间沟通，这能降低出错的可能性，提高个人效率。</li>
<li>极端复杂的问题：更多的需要不断的试错、调整。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《谁是谷歌想要的人才？》]]></title>
    <link href="http://biaobiaoqi.github.com/blog/2013/04/20/are-you-smart-enough-to-work-at-google/"/>
    <updated>2013-04-20T00:47:00+08:00</updated>
    <id>http://biaobiaoqi.github.com/blog/2013/04/20/are-you-smart-enough-to-work-at-google</id>
    <content type="html"><![CDATA[<p><em>道理都明白，还得靠自己</em></p>

<h3>关于本书</h3>

<p>藉由大多数程序员天然的对google怀有的朝圣般的向往和喜爱，开始看<a href="http://book.douban.com/subject/21329264/">这本书</a>。</p>

<p><img class="left" src="http://img.cnbeta.com/upimg/121231/raymon725_1451506190985.jpg" width="250" height="400" title="Place Kitten #2" ></p>

<p>书中的中文版序的标题就是“跳出框框来思考”，这种观点倒不是第一次见到了，甚至可以说，这些观点充斥于互联网上的各种流传、经验贴中。但这并不意味着我们不需要再花时间在这种书上。道理都懂，就是做不好已经成为这个信息通畅的时代的特征之一。正所谓“纸上得来终觉浅，绝知此事要躬行”。</p>

<!--more-->


<p>而如果有一个“躬行”过的人再将他的感受娓娓道来，辅以自己的用心体会，或许会事半功倍呢。这就是我想通过这本书得到的。如下几点，让这个想法成为可能：</p>

<ul>
<li>1.这本书并不单单是一个题集，大约有一般的篇目是在讲述题记，另外一半的篇目，则是代入感颇强的为什么要这么思考的叙述。后者看似无关功利，但却可以给人足够的心理暗示和支撑，以提升良好思考习惯在内心的重要性。</li>
<li>2.作者庞德斯通写过不少充满思维的力量书。</li>
</ul>


<p>认同归认同，关键的还是自己的所得。下面是我的一些思考。</p>

<h3>我的思考</h3>

<ul>
<li>1.解决问题的思路：问题域 --> 结果</li>
<li><ul>
<li>问题域：需要慎重思考，充分利用资源，限定问题域的边界。往往很多题目是在没有弄清楚题意的情况下开始解答而得不到好的答案。</li>
</ul>
</li>
<li><ul>
<li>问题域向结果推演：首先是发散式的头脑风暴（发现尽可能多的维度的才想），然后再依次的理性分析，找本质规律，内在联系，向结果靠拢。</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>2.分析过程中，有些需要注意的点：</li>
<li><ul>
<li>用尽可能的条件。</li>
</ul>
</li>
<li><ul>
<li>图形化思维（可能人体对这种视觉层次的抽象更敏锐），</li>
</ul>
</li>
<li><ul>
<li>第一个想出来的一般都不够优美。但是或许可以从中吸取观点，不断提炼优化，得到更好的答案。这是一个过程。</li>
</ul>
</li>
<li><ul>
<li>切记“瞎猜”数据，注意发散思维和逻辑思维之间的界定。（费米问题）</li>
</ul>
</li>
<li><ul>
<li>极限思想是发散思维中容易套用的方式。往往可以将它作为启发的源泉，再深入挖掘。</li>
</ul>
</li>
<li><ul>
<li>多跟面试官交流，脑子有时候会跟着嘴巴走。别说的太绝对，显示自己的反思。（不单就面试而言，包括一些场合的交流讨论）</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>3.知识性的东西：</li>
<li><ul>
<li>算法：最近看算法跟最早算法课上的感觉，完全不一样。随着对计算机技术整体的把握越来越细，对算法的理解也变得更深刻了。</li>
</ul>
</li>
<li><ul>
<li>概率论:很多情况下，我们会根据经验来算概率，而不依从概率模型、概率论的理论体系，但人的感性认知是有局限性的。理论体系能支撑更多复杂的情况的分析。</li>
</ul>
</li>
<li><ul>
<li>常识:或许在面对费米问题等时，掌握一些尝试，更有利。</li>
</ul>
</li>
</ul>


<hr />

<p>PS：书中有几个小错误，比如.P208 4题的答案的笔误，以及P210 第5题解题思路中的纰漏。不过，无伤大雅，译者翻译的已经很是舒畅了。</p>
]]></content>
  </entry>
  
</feed>
